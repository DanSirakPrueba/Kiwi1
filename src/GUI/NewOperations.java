/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import static GUI.MainWindow.Black;
import static GUI.MainWindow.Gray;
import controller.Controller;
import deliver.Deliver;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author NasK
 */
public class NewOperations extends javax.swing.JDialog {
    
    Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icons2/cog.png"));
    
    //<editor-fold defaultstate="collapsed" desc=" Nombres del los jTextFields ">
    String SINTAX_ORDER = "SINTAX_ORDER";
    String EXEC_COMMAND = "EXEC_COMMAND";
    String SINTAX_COMMAND = "SINTAX_COMMAND";
    String GF_FIELDS = "GF_FIELDS";
    String SINTAX_OPERATION_1 = "SINTAX_OPERATION";
    String SINTAX_OPERATION_2 = "SINTAX_OPERATION";
    String BASIC_PROCESS = "_BASIC_PROCESS";
    String NEW_PROCESS = "_NEW_PROCESS";
    String SINTAX_ASSOC = "SINTAX_ASSOC";
    String SPECIAL = "developing...";
    //</editor-fold>
    
    /**
     * Creates new form NewOperations
     */
    public NewOperations(JFrame frame) {
        setIconImage(icon);
        initComponents();
        MyinitComponents(frame);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        orderFormat = new javax.swing.JTextField();
        orderFormatInsert = new javax.swing.JButton();
        orderFormatInfo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        commandFormatExe = new javax.swing.JTextField();
        commandFormatExeInsert = new javax.swing.JButton();
        commandFormatExeInfo = new javax.swing.JButton();
        commandFormatSintax = new javax.swing.JTextField();
        commandFormatSintaxInsert = new javax.swing.JButton();
        commandFormatSintaxInfo = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        failureManagerFormat = new javax.swing.JTextField();
        failureManagerFormatInsert = new javax.swing.JButton();
        failureManagerFormatInfo = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        concatOperationSintax = new javax.swing.JTextField();
        concatOperationSintaxInsert = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        compAsigOperationSintax = new javax.swing.JTextField();
        compAsigOperationSintaxInsert = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        basicProcessingFormat = new javax.swing.JTextField();
        basicProcessingFormatInsert = new javax.swing.JButton();
        newProcessingFormat = new javax.swing.JTextField();
        newProcessingFormatInsert = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        associationFormat = new javax.swing.JTextField();
        associationFormatInsert = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        specialEventFormat = new javax.swing.JTextField();
        specialEventFormatInsert = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);

        jSplitPane1.setDividerLocation(295);
        jSplitPane1.setEnabled(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(270, 45));

        orderFormat.setText("X_ORDEN_SINTAX");
        orderFormat.setToolTipText("");
        orderFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderFormatActionPerformed(evt);
            }
        });
        orderFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                orderFormatFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                orderFormatFocusGained(evt);
            }
        });

        orderFormatInsert.setText("Insert");
        orderFormatInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderFormatInsertActionPerformed(evt);
            }
        });

        orderFormatInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons2/information.png"))); // NOI18N
        orderFormatInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderFormatInfoActionPerformed(evt);
            }
        });

        commandFormatExe.setText("C_EJECUTA_COMANDO");
        commandFormatExe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFormatExeActionPerformed(evt);
            }
        });
        commandFormatExe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                commandFormatExeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                commandFormatExeFocusLost(evt);
            }
        });

        commandFormatExeInsert.setText("Insert");
        commandFormatExeInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFormatExeInsertActionPerformed(evt);
            }
        });

        commandFormatExeInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons2/information.png"))); // NOI18N
        commandFormatExeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFormatExeInfoActionPerformed(evt);
            }
        });

        commandFormatSintax.setText("C_SINTAXIS_COMANDO");
        commandFormatSintax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFormatSintaxActionPerformed(evt);
            }
        });
        commandFormatSintax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                commandFormatSintaxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                commandFormatSintaxFocusLost(evt);
            }
        });

        commandFormatSintaxInsert.setText("Insert");
        commandFormatSintaxInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commandFormatSintaxInsertActionPerformed(evt);
            }
        });

        commandFormatSintaxInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons2/information.png"))); // NOI18N

        failureManagerFormat.setText("CAMPOS_GF");
        failureManagerFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                failureManagerFormatActionPerformed(evt);
            }
        });
        failureManagerFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                failureManagerFormatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                failureManagerFormatFocusLost(evt);
            }
        });

        failureManagerFormatInsert.setText("Insert");
        failureManagerFormatInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                failureManagerFormatInsertActionPerformed(evt);
            }
        });

        failureManagerFormatInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons2/information.png"))); // NOI18N

        concatOperationSintax.setText("X_OPERACION_SINTAX");
        concatOperationSintax.setToolTipText("SUMA-CONCATENACION");
        concatOperationSintax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concatOperationSintaxActionPerformed(evt);
            }
        });
        concatOperationSintax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                concatOperationSintaxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                concatOperationSintaxFocusLost(evt);
            }
        });

        concatOperationSintaxInsert.setText("Insert");
        concatOperationSintaxInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concatOperationSintaxInsertActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons2/information.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(failureManagerFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(failureManagerFormatInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(failureManagerFormatInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(commandFormatSintax, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commandFormatSintaxInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commandFormatSintaxInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(commandFormatExe, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commandFormatExeInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(commandFormatExeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(orderFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderFormatInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderFormatInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(concatOperationSintax, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(concatOperationSintaxInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(orderFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orderFormatInsert))
                    .addComponent(orderFormatInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(commandFormatExe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(commandFormatExeInsert))
                    .addComponent(commandFormatExeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(commandFormatSintax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(commandFormatSintaxInsert))
                    .addComponent(commandFormatSintaxInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(failureManagerFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(failureManagerFormatInsert))
                    .addComponent(failureManagerFormatInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(concatOperationSintax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(concatOperationSintaxInsert))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(270, 45));

        compAsigOperationSintax.setText("X_OPERACION_SINTAX");
        compAsigOperationSintax.setToolTipText("COMPARACION-ASIGNACION");
        compAsigOperationSintax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compAsigOperationSintaxActionPerformed(evt);
            }
        });
        compAsigOperationSintax.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                compAsigOperationSintaxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                compAsigOperationSintaxFocusLost(evt);
            }
        });

        compAsigOperationSintaxInsert.setText("Insert");
        compAsigOperationSintaxInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compAsigOperationSintaxInsertActionPerformed(evt);
            }
        });

        basicProcessingFormat.setText("_TRATAR_BASICO");
        basicProcessingFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicProcessingFormatActionPerformed(evt);
            }
        });
        basicProcessingFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                basicProcessingFormatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                basicProcessingFormatFocusLost(evt);
            }
        });

        basicProcessingFormatInsert.setText("Insert");
        basicProcessingFormatInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicProcessingFormatInsertActionPerformed(evt);
            }
        });

        newProcessingFormat.setText("_TRATAR_NUEVO");
        newProcessingFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProcessingFormatActionPerformed(evt);
            }
        });
        newProcessingFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newProcessingFormatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newProcessingFormatFocusLost(evt);
            }
        });

        newProcessingFormatInsert.setText("Insert");
        newProcessingFormatInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProcessingFormatInsertActionPerformed(evt);
            }
        });

        associationFormat.setText("X_ASOCIAR_SINTAX");
        associationFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                associationFormatActionPerformed(evt);
            }
        });
        associationFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                associationFormatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                associationFormatFocusLost(evt);
            }
        });

        associationFormatInsert.setText("Insert");
        associationFormatInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                associationFormatInsertActionPerformed(evt);
            }
        });

        specialEventFormat.setEditable(false);
        specialEventFormat.setText("_SPECIAL_");
        specialEventFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialEventFormatActionPerformed(evt);
            }
        });
        specialEventFormat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                specialEventFormatFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                specialEventFormatFocusLost(evt);
            }
        });

        specialEventFormatInsert.setText("Insert");
        specialEventFormatInsert.setEnabled(false);
        specialEventFormatInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialEventFormatInsertActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addComponent(jSeparator5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(compAsigOperationSintax, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(compAsigOperationSintaxInsert))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(associationFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(associationFormatInsert))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(specialEventFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(specialEventFormatInsert)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(basicProcessingFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(basicProcessingFormatInsert))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(newProcessingFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newProcessingFormatInsert)))
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compAsigOperationSintax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compAsigOperationSintaxInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basicProcessingFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(basicProcessingFormatInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newProcessingFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newProcessingFormatInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(associationFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(associationFormatInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(specialEventFormat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specialEventFormatInsert))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //<editor-fold defaultstate="collapsed" desc=" MyinitComponents ">
    private void MyinitComponents(JFrame frame) {
        this.setTitle("New Operations");
        this.setModal(true);
        this.setLocationRelativeTo(frame);
        
        Deliver.setOrigin(this);
        Deliver.setDestination(frame);
        
        orderFormat.setForeground(Gray);
        commandFormatExe.setForeground(Gray);
        commandFormatSintax.setForeground(Gray);
        failureManagerFormat.setForeground(Gray);
        concatOperationSintax.setForeground(Gray);
        compAsigOperationSintax.setForeground(Gray);
        basicProcessingFormat.setForeground(Gray);
        newProcessingFormat.setForeground(Gray);
        associationFormat.setForeground(Gray);
        specialEventFormat.setForeground(Gray);

        orderFormat.setText(SINTAX_ORDER);
        commandFormatExe.setText(EXEC_COMMAND);
        commandFormatSintax.setText(SINTAX_COMMAND);
        failureManagerFormat.setText(GF_FIELDS);
        concatOperationSintax.setText(SINTAX_OPERATION_1);
        compAsigOperationSintax.setText(SINTAX_OPERATION_2);
        basicProcessingFormat.setText(BASIC_PROCESS);
        newProcessingFormat.setText(NEW_PROCESS);
        associationFormat.setText(SINTAX_ASSOC);
        specialEventFormat.setText(SPECIAL);
        
        orderFormatInsert.requestFocus();
    }
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" Acciones Comunes ">
    private void opActions(int Index, JTextField jtf, JButton jb, String preText) {
        if (!jtf.getText().equalsIgnoreCase(preText)) {
            Object[] what = new Object[1];
            what[0] = jtf.getText();
            Controller.controller(Index, what);
            if (preText.equalsIgnoreCase("")) {
                jtf.setForeground(Black);
            } else {
                jtf.setForeground(Gray);
            }
            jtf.setText(preText);
            jb.requestFocus();
        }
    }

    private void opFocus(JTextField jtf, String preText, Color c, String postText) {
        if (jtf.getText().equalsIgnoreCase(preText)) {
            jtf.setForeground(c);
            jtf.setText(postText);
        }
    }
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" TextField & Buttons ">
    
    //<editor-fold defaultstate="collapsed" desc=" 1.orderFormat ">
    private void orderFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderFormatActionPerformed
        int Index = Controller.orderFormat;
        JTextField jtf = orderFormat;
        JButton jb = orderFormatInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_orderFormatActionPerformed

    private void orderFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_orderFormatFocusGained
        JTextField jtf = orderFormat;
        String preText = SINTAX_ORDER;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_orderFormatFocusGained

    private void orderFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_orderFormatFocusLost
        JTextField jtf = orderFormat;
        String preText = "";
        Color c = Gray;
        String postText = SINTAX_ORDER;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_orderFormatFocusLost

    private void orderFormatInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderFormatInsertActionPerformed
        int Index = Controller.orderFormat;
        JTextField jtf = orderFormat;
        JButton jb = orderFormatInsert;
        String preText = SINTAX_ORDER;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_orderFormatInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 2.commandFormatExe ">
    private void commandFormatExeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFormatExeActionPerformed
        int Index = Controller.commandFormatExe;
        JTextField jtf = commandFormatExe;
        JButton jb = commandFormatExeInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_commandFormatExeActionPerformed

    private void commandFormatExeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commandFormatExeFocusGained
        JTextField jtf = commandFormatExe;
        String preText = EXEC_COMMAND;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_commandFormatExeFocusGained

    private void commandFormatExeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commandFormatExeFocusLost
        JTextField jtf = commandFormatExe;
        String preText = "";
        Color c = Gray;
        String postText = EXEC_COMMAND;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_commandFormatExeFocusLost

    private void commandFormatExeInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFormatExeInsertActionPerformed
        int Index = Controller.commandFormatExe;
        JTextField jtf = commandFormatExe;
        JButton jb = commandFormatExeInsert;
        String preText = EXEC_COMMAND;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_commandFormatExeInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 3.commandFormatSintax ">
    private void commandFormatSintaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFormatSintaxActionPerformed
        int Index = Controller.commandFormatSintax;
        JTextField jtf = commandFormatSintax;
        JButton jb = commandFormatSintaxInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_commandFormatSintaxActionPerformed

    private void commandFormatSintaxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commandFormatSintaxFocusGained
        JTextField jtf = commandFormatSintax;
        String preText = SINTAX_COMMAND;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_commandFormatSintaxFocusGained

    private void commandFormatSintaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commandFormatSintaxFocusLost
        JTextField jtf = commandFormatSintax;
        String preText = "";
        Color c = Gray;
        String postText = SINTAX_COMMAND;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_commandFormatSintaxFocusLost

    private void commandFormatSintaxInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFormatSintaxInsertActionPerformed
        int Index = Controller.commandFormatSintax;
        JTextField jtf = commandFormatSintax;
        JButton jb = commandFormatSintaxInsert;
        String preText = SINTAX_COMMAND;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_commandFormatSintaxInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 4.failureManagerFormat ">
    private void failureManagerFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_failureManagerFormatActionPerformed
        int Index = Controller.failureManagerFormat;
        JTextField jtf = failureManagerFormat;
        JButton jb = failureManagerFormatInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_failureManagerFormatActionPerformed

    private void failureManagerFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_failureManagerFormatFocusGained
        JTextField jtf = failureManagerFormat;
        String preText = GF_FIELDS;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_failureManagerFormatFocusGained

    private void failureManagerFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_failureManagerFormatFocusLost
        JTextField jtf = failureManagerFormat;
        String preText = "";
        Color c = Gray;
        String postText = GF_FIELDS;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_failureManagerFormatFocusLost

    private void failureManagerFormatInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_failureManagerFormatInsertActionPerformed
        int Index = Controller.failureManagerFormat;
        JTextField jtf = failureManagerFormat;
        JButton jb = failureManagerFormatInsert;
        String preText = GF_FIELDS;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_failureManagerFormatInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 5.concatOperationSintax ">
    private void concatOperationSintaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concatOperationSintaxActionPerformed
        int Index = Controller.concatOperationSintax;
        JTextField jtf = concatOperationSintax;
        JButton jb = concatOperationSintaxInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_concatOperationSintaxActionPerformed

    private void concatOperationSintaxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_concatOperationSintaxFocusGained
        JTextField jtf = concatOperationSintax;
        String preText = SINTAX_OPERATION_1;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_concatOperationSintaxFocusGained

    private void concatOperationSintaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_concatOperationSintaxFocusLost
        JTextField jtf = concatOperationSintax;
        String preText = "";
        Color c = Gray;
        String postText = SINTAX_OPERATION_1;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_concatOperationSintaxFocusLost

    private void concatOperationSintaxInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concatOperationSintaxInsertActionPerformed
        int Index = Controller.concatOperationSintax;
        JTextField jtf = concatOperationSintax;
        JButton jb = concatOperationSintaxInsert;
        String preText = SINTAX_OPERATION_1;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_concatOperationSintaxInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 6.compAsigOperationSintax ">
    private void compAsigOperationSintaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compAsigOperationSintaxActionPerformed
        int Index = Controller.compAsigOperationSintax;
        JTextField jtf = compAsigOperationSintax;
        JButton jb = compAsigOperationSintaxInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_compAsigOperationSintaxActionPerformed

    private void compAsigOperationSintaxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_compAsigOperationSintaxFocusGained
        JTextField jtf = compAsigOperationSintax;
        String preText = SINTAX_OPERATION_2;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_compAsigOperationSintaxFocusGained

    private void compAsigOperationSintaxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_compAsigOperationSintaxFocusLost
        JTextField jtf = compAsigOperationSintax;
        String preText = "";
        Color c = Gray;
        String postText = SINTAX_OPERATION_2;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_compAsigOperationSintaxFocusLost

    private void compAsigOperationSintaxInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compAsigOperationSintaxInsertActionPerformed
        int Index = Controller.compAsigOperationSintax;
        JTextField jtf = compAsigOperationSintax;
        JButton jb = compAsigOperationSintaxInsert;
        String preText = SINTAX_OPERATION_2;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_compAsigOperationSintaxInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 7.basicProcessingFormat ">
    private void basicProcessingFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicProcessingFormatActionPerformed
        int Index = Controller.basicProcessingFormat;
        JTextField jtf = basicProcessingFormat;
        JButton jb = basicProcessingFormatInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_basicProcessingFormatActionPerformed

    private void basicProcessingFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_basicProcessingFormatFocusGained
        JTextField jtf = basicProcessingFormat;
        String preText = BASIC_PROCESS;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_basicProcessingFormatFocusGained

    private void basicProcessingFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_basicProcessingFormatFocusLost
        JTextField jtf = basicProcessingFormat;
        String preText = "";
        Color c = Gray;
        String postText = BASIC_PROCESS;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_basicProcessingFormatFocusLost

    private void basicProcessingFormatInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicProcessingFormatInsertActionPerformed
        int Index = Controller.basicProcessingFormat;
        JTextField jtf = basicProcessingFormat;
        JButton jb = basicProcessingFormatInsert;
        String preText = BASIC_PROCESS;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_basicProcessingFormatInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 8.newProcessingFormat ">
    private void newProcessingFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProcessingFormatActionPerformed
        int Index = Controller.newProcessingFormat;
        JTextField jtf = newProcessingFormat;
        JButton jb = newProcessingFormatInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_newProcessingFormatActionPerformed

    private void newProcessingFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProcessingFormatFocusGained
        JTextField jtf = newProcessingFormat;
        String preText = NEW_PROCESS;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_newProcessingFormatFocusGained

    private void newProcessingFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProcessingFormatFocusLost
        JTextField jtf = newProcessingFormat;
        String preText = "";
        Color c = Gray;
        String postText = NEW_PROCESS;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_newProcessingFormatFocusLost

    private void newProcessingFormatInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProcessingFormatInsertActionPerformed
        int Index = Controller.newProcessingFormat;
        JTextField jtf = newProcessingFormat;
        JButton jb = newProcessingFormatInsert;
        String preText = NEW_PROCESS;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_newProcessingFormatInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 9.associationFormat ">
    private void associationFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_associationFormatActionPerformed
        int Index = Controller.associationFormat;
        JTextField jtf = associationFormat;
        JButton jb = associationFormatInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_associationFormatActionPerformed

    private void associationFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_associationFormatFocusGained
        JTextField jtf = associationFormat;
        String preText = SINTAX_ASSOC;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_associationFormatFocusGained

    private void associationFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_associationFormatFocusLost
        JTextField jtf = associationFormat;
        String preText = "";
        Color c = Gray;
        String postText = SINTAX_ASSOC;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_associationFormatFocusLost

    private void associationFormatInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_associationFormatInsertActionPerformed
        int Index = Controller.associationFormat;
        JTextField jtf = associationFormat;
        JButton jb = associationFormatInsert;
        String preText = SINTAX_ASSOC;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_associationFormatInsertActionPerformed
    //</editor-fold>
    //<editor-fold defaultstate="collapsed" desc=" 10.specialEventFormat ">
    private void specialEventFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialEventFormatActionPerformed
        int Index = Controller.specialEventFormat;
        JTextField jtf = specialEventFormat;
        JButton jb = specialEventFormatInsert;
        String preText = "";

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_specialEventFormatActionPerformed

    private void specialEventFormatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_specialEventFormatFocusGained
        JTextField jtf = specialEventFormat;
        String preText = SPECIAL;
        Color c = Black;
        String postText = "";

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_specialEventFormatFocusGained

    private void specialEventFormatFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_specialEventFormatFocusLost
        JTextField jtf = specialEventFormat;
        String preText = "";
        Color c = Gray;
        String postText = SPECIAL;

        opFocus(jtf, preText, c, postText);
    }//GEN-LAST:event_specialEventFormatFocusLost

    private void specialEventFormatInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialEventFormatInsertActionPerformed
        int Index = Controller.specialEventFormat;
        JTextField jtf = specialEventFormat;
        JButton jb = specialEventFormatInsert;
        String preText = SPECIAL;

        opActions(Index, jtf, jb, preText);
    }//GEN-LAST:event_specialEventFormatInsertActionPerformed
//</editor-fold>
    
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc=" FailureManager ">
    public void showError(String error) {
        JOptionPane op = new JOptionPane();
        String[] es = error.split("@");
        String Text = "<html><b>Input example:</b><br>"
                + "<i>" + es[0] + "</i><br><br>"
                + "<b>Output example:</b><br>"
                + "<i>" + es[1] + "</i></html>";
        int messagetype = JOptionPane.ERROR_MESSAGE; //JOptionPane.INFORMATION_MESSAGE
        op.showMessageDialog(this, Text, "[ERROR] Invalid Input format", messagetype);
    }
    //</editor-fold>
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    //<editor-fold defaultstate="collapsed" desc=" Info Buttons ">
	private void orderFormatInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderFormatInfoActionPerformed
        JOptionPane op = new JOptionPane();
        String Text = "<html>Se compone de una solo tupla: <br>" +
            "Indica el orden de evaluar los formateos <br>" +
            "- X_ORDEN_SINTAX su contenido se forma de las iniciales de los formateos a <br>" +
            "realizar (C = COMANDO, S = SELECT, I = INSERT, D = DELETE, U = UPDATE, <br>" +
            "Q = QUERY), y su posición indica el orden en el análisis de los formateos. Los <br>" +
            "formateos que no estén especificados seguirán el orden por defecto. <br>" +
            " %^X_ORDEN_SINTAX.”[C],[S],[I],[D],[U],[Q]” <br>" +
            " Ejemplo de orden: <br>" +
            " %^X_ORDEN_SINTAX.”S,C” <br>" +
            "* Se realiza primero los select, posteriormente los comando (luego los insert, delete, <br>" +
            "update y query si los hubiera).</html>";
        op.showMessageDialog(this, Text, "[Info] Format Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_orderFormatInfoActionPerformed
	
    private void commandFormatExeInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commandFormatExeInfoActionPerformed
        JOptionPane op = new JOptionPane();
        String Text = "Cada comando está formado por dos tuplas: \n" +
            "- C_EJECUTA_COMANDO determina el comando a ejecutar con los parámetros \n" +
            "necesarios indicados en la librería de servicios de la UFEXT. Para que se realice la \n" +
            "ejecución del comando deben estar configurados adecuadamente todos los \n" +
            "componentes que intervienen en la ejecución. El parámetro de la central y del sistema \n" +
            "no es necesario indicarlo, puesto que se asigna implícitamente el que llega del evento. \n" +
            "Es posible utilizar variables extraídas del Gestor de Eventos para poner valores a los \n" +
            "parámetros (no hace falta indicar H ni N puesto todo se trata como texto). Los \n" +
            "parámetros necesarios son: \n" +
            "-c CENTRAL indica la central en la que realiza el comando. Por defecto el comando \n" +
            "se realiza (sino se indica este parámetro) en la central que envió el evento. \n" +
            "-u USUARIO_EOC indica el usuario bajo el que se realiza el comando. Es un \n" +
            "parámetro obligatorio. \n" +
            "-x SERVICIO indica el servicio a ejecutar en la central del evento. \n" +
            "-e COMANDO indica el comando a ejecutar en la central del evento. Es un parámetro \n" +
            "obligatorio. \n" +
            "-t TEMPORIZACION indica el tiempo máximo de espera a la recepción de respuesta \n" +
            "al comando (en segundos). Por defecto es 600. \n" +
            "-s TAMAÑO indica el tamaño de respuesta deseado (caracteres) para dar terminada la \n" +
            "ejecución. Valor por defecto 0, se entenderá que no importa el tamaño de respuesta. \n" +
            "-p PATRONES indica el patrón de finalización. Es una lista (separados por comas) de \n" +
            "literales. Ejemplo: “END”,”FAULT CODE” \n" +
            "-m MAQUINA indica el sistema donde se ejecuta primero el comando sistema \n" +
            "principal o respaldo CI|RC. \n" +
            "-r RESPALDO indica si se debe hacer respaldo o no SI|NO. \n" +
            "%^C_EJECUTA_COMANDO.”[-c CENTRAL] -u USUARIO_EOC [–x SERVICIO] \n" +
            "–e COMANDO [-t TEMPORIZACION] [-s TAMANO] [-p PATRONES] [-m \n" +
            "MAQUINA] [-r RESPALDO]”";
        op.showMessageDialog(this, Text, "[Info] Format Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_commandFormatExeInfoActionPerformed
    //</editor-fold>
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField associationFormat;
    private javax.swing.JButton associationFormatInsert;
    private javax.swing.JTextField basicProcessingFormat;
    private javax.swing.JButton basicProcessingFormatInsert;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField commandFormatExe;
    private javax.swing.JButton commandFormatExeInfo;
    private javax.swing.JButton commandFormatExeInsert;
    private javax.swing.JTextField commandFormatSintax;
    private javax.swing.JButton commandFormatSintaxInfo;
    private javax.swing.JButton commandFormatSintaxInsert;
    private javax.swing.JTextField compAsigOperationSintax;
    private javax.swing.JButton compAsigOperationSintaxInsert;
    private javax.swing.JTextField concatOperationSintax;
    private javax.swing.JButton concatOperationSintaxInsert;
    private javax.swing.JTextField failureManagerFormat;
    private javax.swing.JButton failureManagerFormatInfo;
    private javax.swing.JButton failureManagerFormatInsert;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField newProcessingFormat;
    private javax.swing.JButton newProcessingFormatInsert;
    private javax.swing.JTextField orderFormat;
    private javax.swing.JButton orderFormatInfo;
    private javax.swing.JButton orderFormatInsert;
    private javax.swing.JTextField specialEventFormat;
    private javax.swing.JButton specialEventFormatInsert;
    // End of variables declaration//GEN-END:variables
}
